// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ORG
  USER
}

model User {
  id            String   @id @default(uuid()) @db.VarChar(50)
  name          String   @db.VarChar(100)
  email         String   @db.VarChar(100)
  password_hash String   @db.VarChar(100)
  role          Role     @default(USER)
  created_at    DateTime @default(now())

  org    Org?    @relation(fields: [org_id], references: [id])
  org_id String? @db.VarChar(50)

  @@index([id, name])
  @@map("users")
}

model Pets {
  id         String    @id @default(uuid()) @db.VarChar(50)
  name       String    @db.VarChar(100)
  age        String    @db.VarChar(3)
  breed      String    @db.VarChar(50)
  height     String    @db.VarChar(3) // in cm
  weight     String    @db.VarChar(3) // in kg
  photo      String?   @db.VarChar(500) // url
  adopted    DateTime?
  created_at DateTime  @default(now())

  org    Org    @relation(fields: [org_id], references: [id])
  org_id String @db.VarChar(50)

  @@index([id, name, breed])
  @@map("pets")
}

model Org {
  id          String  @id @default(uuid()) @db.VarChar(50)
  name        String  @db.VarChar(100)
  description String? @db.VarChar(200)
  phone       String  @db.VarChar(15)
  address     String  @db.VarChar(500)

  city    City @relation(fields: [city_id], references: [id])
  city_id Int

  Pets Pets[]
  User User[]

  @@index([id, name, city_id])
  @@map("organizations")
}

model City {
  id   Int    @id // IBGE Code
  name String @db.VarChar(100)

  state    State @relation(fields: [state_id], references: [id])
  state_id Int

  Org Org[]

  @@map("cities")
}

model State {
  id   Int    @id
  uf   String @db.VarChar(2)
  name String @db.VarChar(100)

  City City[]

  @@map("states")
}
